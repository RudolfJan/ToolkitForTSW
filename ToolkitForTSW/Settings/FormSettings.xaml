<Window x:Class="ToolkitForTSW.Settings.FormSettings" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:userControls="clr-namespace:Styles.Library.UserControls;assembly=Styles.Library" 
        xmlns:core="clr-namespace:System;assembly=mscorlib" 
        xmlns:local="clr-namespace:ToolkitForTSW.Settings" 
        mc:Ignorable="d" 
        Style="{StaticResource AllWindows}" 
        MinHeight="600" 
        Title="Settings">

  <Window.Resources>
    <ObjectDataProvider x:Key="HudStyleEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
      <ObjectDataProvider.MethodParameters>
        <x:Type Type="local:HudStyleEnum" />
      </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <ObjectDataProvider x:Key="TemperatureEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
      <ObjectDataProvider.MethodParameters>
        <x:Type Type="local:TemperatureEnum" />
      </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <ObjectDataProvider x:Key="UnitsEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
      <ObjectDataProvider.MethodParameters>
        <x:Type Type="local:UnitsEnum" />
      </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <ObjectDataProvider x:Key="GradeUnitsEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
      <ObjectDataProvider.MethodParameters>
        <x:Type Type="local:GradeUnitsEnum" />
      </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <ObjectDataProvider x:Key="ScreenModeEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
      <ObjectDataProvider.MethodParameters>
        <x:Type Type="local:ScreenModeEnum" />
      </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <ObjectDataProvider x:Key="QualityEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
      <ObjectDataProvider.MethodParameters>
        <x:Type Type="local:QualityEnum" />
      </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <ObjectDataProvider x:Key="QualityPlusOffEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
      <ObjectDataProvider.MethodParameters>
        <x:Type Type="local:QualityPlusOffEnum" />
      </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>


    <ObjectDataProvider x:Key="AntiAliasingEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
      <ObjectDataProvider.MethodParameters>
        <x:Type Type="local:AntiAliasingEnum" />
      </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <!--<ObjectDataProvider x:Key="CrosshariVisibilityEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
      <ObjectDataProvider.MethodParameters>
        <x:Type Type="local:CrosshairVisibilityEnum" />
      </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>-->
  </Window.Resources>

  <ScrollViewer>
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="200" />
        <ColumnDefinition MinWidth="200" />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition Height="Auto" />
        <RowDefinition Height="160" />
      </Grid.RowDefinitions>
      <Border Grid.Column="0" Style="{StaticResource BorderDefault}">
        <StackPanel>
          <TextBlock Style="{StaticResource TextBlockHeader}">Settings files</TextBlock>
          <DataGrid Name="SettingFilesDataGrid" MinHeight="380" Style="{StaticResource DefaultDataGrid}" ItemsSource="{Binding SavedUserSettingsList}" AutoGenerateColumns="False" SelectionChanged="OnSettingFilesDataGridSelectionChanged">
            <DataGrid.Columns>
              <DataGridTextColumn x:Name="NameColumn" Header="Set name" Width="160" Binding="{Binding Name}" SortMemberPath="Name"/>
            </DataGrid.Columns>
          </DataGrid>
          <Button Name="DeleteSaveSetButton" Style="{StaticResource ButtonDefault}" Click="OnDeleteSaveSetBurttonClicked">Delete</Button>
        </StackPanel>
      </Border>

      <Border Grid.Column="1" Grid.Row="0" Style="{StaticResource BorderDefault}">
        <StackPanel>
          <TextBlock Style="{StaticResource TextBlockHeader}">Loaded settings</TextBlock>
          <DataGrid MinHeight="350" MaxHeight="450" Name="SettingsDictionaryDataGrid" Style="{StaticResource DefaultDataGrid}" ItemsSource="{Binding SettingsDictionary.Item}" AutoGenerateColumns="False">
            <DataGrid.Columns>
              <DataGridTextColumn x:Name="KeyColumn" Header=" Key " Width="150" Binding="{Binding Key}" SortMemberPath="Key" />
              <DataGridTextColumn Header=" Value " Binding="{Binding Value}" />
              <DataGridTextColumn x:Name="SectionColumn" Header=" Section " Width="5" Binding="{Binding Section}" SortMemberPath="Section" />
            </DataGrid.Columns>
          </DataGrid>
          <Button Name="UpdateButton" Style="{StaticResource ButtonDefault}" Click="OnUpdateButtonClicked">Update</Button>
        </StackPanel>
      </Border>

      <Border Grid.Column="2" Grid.Row="0" Style="{StaticResource BorderDefault}">
        <StackPanel>
          <TabControl>
            <TabItem Header="Screen">
              <Border Style="{StaticResource ThinBorder}" VerticalAlignment="Stretch">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <StackPanel Grid.Column="0">
                    <Label Style="{StaticResource BorderHeaderLabel}">Video</Label>
                    <DataGrid Name="VideoModesDataGrid" Style="{StaticResource DefaultDataGrid}" MinHeight="200" MaxHeight="300" AutoGenerateColumns="False" ItemsSource="{Binding SettingsScreen.VideoModes.VideoModesList}" SelectionChanged="OnVideoModesDataGridSelectionChanged">
                      <DataGrid.Columns>
                        <DataGridTextColumn Header=" Width " Binding="{Binding Width}" />
                        <DataGridTextColumn Header=" Height " Binding="{Binding Height}" />
                        <DataGridTextColumn Header=" Freq " Binding="{Binding Freq}" />
                      </DataGrid.Columns>
                    </DataGrid>
                    <Button Name="SetScreenResButton" Style="{StaticResource DefaultButton}" Click="OnSetScreenResButtonClicked">
                      Set resolution
                    </Button>
                  </StackPanel>
                  <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Style="{StaticResource TextBlockDefault}">Horizontal screenres</TextBlock>
                    <TextBlock Grid.Row="0" Grid.Column="1" Style="{StaticResource TextBlockDefault}">Vertical screenres</TextBlock>
                    <TextBox Grid.Row="1" Grid.Column="0" Name="ResolutionSizeXTextBox" Style="{StaticResource StaticTextBox}" HorizontalContentAlignment="Right" Text="{Binding SettingsScreen.ResolutionSizeX}" />
                    <TextBox Grid.Row="1" Grid.Column="1" Name="ResolutionSizeYTextBox" Style="{StaticResource StaticTextBox}" HorizontalContentAlignment="Right" Text="{Binding SettingsScreen.ResolutionSizeY}" />

                    <TextBlock Grid.Row="2" Grid.Column="0" Style="{StaticResource TextBlockDefault}">Screen mode</TextBlock>
                    <ComboBox Grid.Column="1" Grid.Row="2" ItemsSource="{Binding Source={StaticResource ScreenModeEnum}}" SelectedValue="{Binding SettingsScreen.ScreenMode}" />
                    <CheckBox Grid.Row="3" Grid.Column="1" Name="VSyncCheckBox" IsChecked="{Binding SettingsScreen.VSync}">
                      VSync
                    </CheckBox>
                    <CheckBox Grid.Row="4" Grid.Column="1" Name="ScreenshotQualityCheckBox" IsChecked="{Binding SettingsScreen.ScreenshotQuality}">
                      <TextBlock TextWrapping="Wrap" MaxWidth="80">High quality screenshots</TextBlock>
                    </CheckBox>

                  </Grid>
                </Grid>
              </Border>

            </TabItem>

            <TabItem Header="Quality">
              <Border Style="{StaticResource BorderThin}" VerticalAlignment="Stretch">
                <StackPanel>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition />
                      <ColumnDefinition />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Column="0" Grid.Row="0" Style="{StaticResource TextBlockDefault}">Overall quality</TextBlock>
                    <ComboBox Grid.Column="1" Grid.Row="0" ItemsSource="{Binding Source={StaticResource QualityEnum}}" SelectedValue="{Binding SettingsQuality.OverAllQualityLevel}" />

                    <TextBlock Grid.Column="0" Grid.Row="1" Style="{StaticResource TextBlockDefault}">Texture quality</TextBlock>
                    <ComboBox Grid.Column="1" Grid.Row="1" ItemsSource="{Binding Source={StaticResource QualityEnum}}" SelectedValue="{Binding SettingsQuality.TextureQuality}" />

                    <TextBlock Grid.Column="0" Grid.Row="2" Style="{StaticResource TextBlockDefault}">Foliage quality</TextBlock>
                    <ComboBox Grid.Column="1" Grid.Row="2" ItemsSource="{Binding Source={StaticResource QualityEnum}}" SelectedValue="{Binding SettingsQuality.FoliageQuality}" />

                    <TextBlock Grid.Column="0" Grid.Row="3" Style="{StaticResource TextBlockDefault}">Shadow quality</TextBlock>
                    <ComboBox Grid.Column="1" Grid.Row="3" ItemsSource="{Binding Source={StaticResource QualityPlusOffEnum}}" SelectedValue="{Binding SettingsQuality.ShadowQuality}" />

                    <TextBlock Grid.Column="0" Grid.Row="4" Style="{StaticResource TextBlockDefault}">Effects quality</TextBlock>
                    <ComboBox Grid.Column="1" Grid.Row="4" ItemsSource="{Binding Source={StaticResource QualityPlusOffEnum}}" SelectedValue="{Binding SettingsQuality.EffectsQuality}" />

                    <TextBlock Grid.Column="0" Grid.Row="5" Style="{StaticResource TextBlockDefault}">Post processing quality</TextBlock>
                    <ComboBox Grid.Column="1" Grid.Row="5" ItemsSource="{Binding Source={StaticResource QualityEnum}}" SelectedValue="{Binding SettingsQuality.PostProcessQuality}" />

                    <TextBlock Grid.Column="0" Grid.Row="6" Style="{StaticResource TextBlockDefault}">View distance quality</TextBlock>
                    <ComboBox Name="ViewDistanceComboBox" Grid.Column="1" Grid.Row="6" ItemsSource="{Binding Source={StaticResource QualityEnum}}" SelectedValue="{Binding SettingsQuality.ViewDistanceQuality}" />
                    <TextBlock Grid.Column="2" Grid.Row="6" Style="{StaticResource TextBlockDefault}">Disabled if advanced settings are active</TextBlock>
                    <TextBlock Grid.Column="0" Grid.Row="7" Style="{StaticResource TextBlockDefault}">Audio quality</TextBlock>
                    <ComboBox Grid.Column="1" Grid.Row="7" ItemsSource="{Binding Source={StaticResource QualityEnum}}" SelectedValue="{Binding SettingsQuality.AudioQualityLevel}" />

                    <TextBlock Grid.Column="0" Grid.Row="8" Style="{StaticResource TextBlockDefault}">Anti alias method</TextBlock>
                    <ComboBox Grid.Column="1" Grid.Row="8" ItemsSource="{Binding Source={StaticResource AntiAliasingEnum}}" SelectedValue="{Binding SettingsQuality.AntiAliasingMethod}" />

                    <TextBlock Grid.Column="0" Grid.Row="9" Style="{StaticResource TextBlockDefault}">Max FPS</TextBlock>
                    <DockPanel Grid.Column="1" Grid.Row="9" Grid.ColumnSpan="2">
                      <Slider Name="MaxFrameRateSlider" MinWidth="220" Minimum="0" Maximum="120" IsSelectionRangeEnabled="True" SelectionStart="30" SelectionEnd="60" IsSnapToTickEnabled="True" TickFrequency="5" Value="{Binding SettingsQuality.MaxFrameRate ,Mode=TwoWay}" HorizontalAlignment="Stretch" />
                      <TextBox Width="30" DockPanel.Dock="Right" Text="{Binding Value, ElementName=MaxFrameRateSlider, StringFormat={}{0:0}}" VerticalAlignment="Center" HorizontalContentAlignment="Right" />
                    </DockPanel>
                  </Grid>
                </StackPanel>
              </Border>
            </TabItem>

            <TabItem Header="Sound">
              <Border Style="{StaticResource ThinBorder}" VerticalAlignment="Stretch">
                <StackPanel>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="115" />
                      <ColumnDefinition Width="102*" />
                      <ColumnDefinition Width="158*" />
                      <ColumnDefinition Width="5*" />
                      <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Column="0" Grid.Row="0" Style="{StaticResource TextBlockDefault}" Margin="5,11">Master volume</TextBlock>
                    <Slider Name="MasterVolumeSlider" Grid.Column="1" Grid.Row="0" Minimum="0" Maximum="4.0" IsSelectionRangeEnabled="True" SelectionStart="0" SelectionEnd="1.0" IsSnapToTickEnabled="True" TickFrequency="0.2" Value="{Binding SettingsSound.MasterSoundVolume ,Mode=TwoWay}" Grid.ColumnSpan="3" ValueChanged="OnMasterVolumeChanged" />
                    <TextBox Grid.Column="4" Grid.Row="0" Text="{Binding Value, ElementName=MasterVolumeSlider, StringFormat={}{0:0.0}}" VerticalAlignment="Center" HorizontalContentAlignment="Right" />

                    <TextBlock Grid.Column="0" Grid.Row="1" Style="{StaticResource TextBlockDefault}" Margin="5,11">Ambient volume</TextBlock>
                    <Slider Name="AmbientVolumeSlider" Grid.Column="1" Grid.Row="1" Minimum="0" Maximum="4.0" IsSelectionRangeEnabled="True" SelectionStart="0" SelectionEnd="1.0" IsSnapToTickEnabled="True" TickFrequency="0.2" Value="{Binding SettingsSound.AmbienceSoundVolume  ,Mode=TwoWay}" Grid.ColumnSpan="3" ValueChanged="OmAmbientVolumeChanged" />
                    <TextBox Grid.Column="4" Grid.Row="1" Text="{Binding Value, ElementName=AmbientVolumeSlider, StringFormat={}{0:0.0}}" VerticalAlignment="Center" HorizontalContentAlignment="Right" />

                    <TextBlock Grid.Column="0" Grid.Row="2" Style="{StaticResource TextBlockDefault}" Margin="5,11">Dialog sound volume</TextBlock>
                    <Slider Name="DialogSoundVolumeSlider" Grid.Column="1" Grid.Row="2" Minimum="0" Maximum="4.0" IsSelectionRangeEnabled="True" SelectionStart="0" SelectionEnd="1.0" IsSnapToTickEnabled="True" TickFrequency="0.2" Value="{Binding SettingsSound.DialogSoundVolume  ,Mode=TwoWay}" Grid.ColumnSpan="3" ValueChanged="OnDialogSoundVolumeChanged" />
                    <TextBox Grid.Column="4" Grid.Row="2" Text="{Binding Value, ElementName=DialogSoundVolumeSlider, StringFormat={}{0:0.0}}" VerticalAlignment="Center" HorizontalContentAlignment="Right" />

                    <TextBlock Grid.Column="0" Grid.Row="3" Style="{StaticResource TextBlockDefault}" Margin="5,11">External alert volume</TextBlock>
                    <Slider Name="ExternalAlertVolumeSlider" Grid.Column="1" Grid.Row="3" Minimum="0" Maximum="4.0" IsSelectionRangeEnabled="True" SelectionStart="0" SelectionEnd="1.0" IsSnapToTickEnabled="True" TickFrequency="0.2" Value="{Binding SettingsSound.ExternalAlertVolume  ,Mode=TwoWay}" Grid.ColumnSpan="3" ValueChanged="OnExternalAlertVolumeChanged" />
                    <TextBox Grid.Column="4" Grid.Row="3" Text="{Binding Value, ElementName=ExternalAlertVolumeSlider, StringFormat={}{0:0.0}}" VerticalAlignment="Center" HorizontalContentAlignment="Right" />

                    <TextBlock Grid.Column="0" Grid.Row="4" Style="{StaticResource TextBlockDefault}" Margin="5,11">SFX volume</TextBlock>
                    <Slider Name="SFXSoundVolumeSlider" Grid.Column="1" Grid.Row="4" Minimum="0" Maximum="4.0" IsSelectionRangeEnabled="True" SelectionStart="0" SelectionEnd="1.0" IsSnapToTickEnabled="True" TickFrequency="0.2" Value="{Binding SettingsSound.SFXSoundVolume  ,Mode=TwoWay}" Grid.ColumnSpan="3" ValueChanged="OnSFXSoundVolumeChanged" />
                    <TextBox Grid.Column="4" Grid.Row="4" Text="{Binding Value, ElementName=SFXSoundVolumeSlider, StringFormat={}{0:0.0}}" VerticalAlignment="Center" HorizontalContentAlignment="Right" />

                    <TextBlock Grid.Column="0" Grid.Row="5" Style="{StaticResource TextBlockDefault}" Margin="5,11">Main Menu UI SFX</TextBlock>
                    <Slider Name="MenuSFXVolumeSlider" Grid.Column="1" Grid.Row="5" Minimum="0" Maximum="4.0" IsSelectionRangeEnabled="True" SelectionStart="0" SelectionEnd="1.0" IsSnapToTickEnabled="True" TickFrequency="0.2" Value="{Binding SettingsSound.MenuSFXSoundVolume ,Mode=TwoWay}" Grid.ColumnSpan="3" ValueChanged="OnMenuSFXVolumeChanged" />
                    <TextBox Grid.Column="4" Grid.Row="5" Text="{Binding Value, ElementName=MenuSFXVolumeSlider, StringFormat={}{0:0.0}}" VerticalAlignment="Center" HorizontalContentAlignment="Right" />

                    <CheckBox Grid.Column="0" Grid.Row="6" Name="SubtitlesCheckBox" IsChecked="{Binding SettingsSound.Subtitles  ,Mode=TwoWay}">
                      Subtitles
                    </CheckBox>
                    <CheckBox Grid.Column="1" Grid.Row="6" Name="WindowAudioFocusCheckBox" IsChecked="{Binding SettingsSound.WindowFocus  ,Mode=TwoWay}" Grid.ColumnSpan="2" Margin="5,5,0,5">
                      Window Audio Focus
                    </CheckBox>
                    <CheckBox Grid.Column="0" Grid.Row="7" Name="LimitVolume" IsChecked="{Binding SettingsSound.LimitVolume, Mode=TwoWay}" Checked="OnLimitVolumeChecked">
                      Limit volumes
                    </CheckBox>
                    <Button Grid.Column="1" Grid.Row="7" Name="SetRecommendedSoundButton" Style="{StaticResource DefaultButton}" Width="160" HorizontalAlignment="Left" Click="OnSetRecommendedSoundButtonClicked" Grid.ColumnSpan="2" Margin="5,5,0,5">
                      Set recommended values
                    </Button>
                  </Grid>

                  <TextBlock TextWrapping="Wrap" MaxWidth="400">
                    In TSW you can only set sound volumes up to 1.0. The sliders do not allow to set higher values, though TSW ill work with these higher volumes. The "Limit volumes"checkbox will limit the set volumes to 1.0 if checked.
                  </TextBlock>
                </StackPanel>
              </Border>
            </TabItem>

            <TabItem Header=" HUD">
              <Border Style="{StaticResource ThinBorder}" VerticalAlignment="Stretch">
                <StackPanel>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition />
                      <ColumnDefinition />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                    </Grid.RowDefinitions>
                    <CheckBox Grid.Column="0" Grid.Row="0" IsChecked="{Binding SettingsHUD.ObjectiveMarker}">Show objective marker</CheckBox>
                    <TextBlock Grid.Column="1" Grid.Row="0" Style="{StaticResource TextBlockDefault}">In game toggle Ctrl+1 key</TextBlock>

                    <TextBlock Grid.Column="0" Grid.Row="1" Style="{StaticResource TextBlockDefault}">Show next signal</TextBlock>
                    <ComboBox Grid.Column="1" Grid.Row="1" ItemsSource="{Binding Source={StaticResource HudStyleEnum}}" SelectedValue="{Binding SettingsHUD.NextSignalMarker}" />
                    <CheckBox Grid.Column="2" Grid.Row="1" IsChecked="{Binding SettingsHUD.NextSignalAspect}">Next signal aspect</CheckBox>
                    <TextBlock Grid.Column="0" Grid.Row="2" Style="{StaticResource TextBlockDefault}">Show next speed limit</TextBlock>
                    <ComboBox Grid.Column="1" Grid.Row="2" ItemsSource="{Binding Source={StaticResource HudStyleEnum}}" SelectedValue="{Binding SettingsHUD.NextSpeedLimitMarker}" />
                    <CheckBox Grid.Column="0" Grid.Row="3" IsChecked="{Binding SettingsHUD.Score}">Show score</CheckBox>
                    <CheckBox Grid.Column="1" Grid.Row="3" IsChecked="{Binding SettingsHUD.ScenarioMarker}">Show scenario marker</CheckBox>
                    <CheckBox Grid.Column="2" Grid.Row="3" IsChecked="{Binding SettingsHUD.Compass}">Show compass</CheckBox>
                    <CheckBox Grid.Column="0" Grid.Row="4" IsChecked="{Binding SettingsHUD.StopMarker}">Show Stop Marker</CheckBox>

                  </Grid>
                </StackPanel>
              </Border>

            </TabItem>
            <TabItem Header="Game play">
              <Border Style="{StaticResource ThinBorder}" VerticalAlignment="Stretch">
                <StackPanel>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="172*" />
                      <ColumnDefinition Width="127*" />
                      <ColumnDefinition Width="25*" />
                      <ColumnDefinition Width="37*" />
                      <ColumnDefinition Width="115*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                    </Grid.RowDefinitions>
                    <CheckBox Name="JunctionDerail" Grid.Column="0" Grid.Row="0" IsChecked="{Binding SettingsGamePlay.DisableJunctionDerail}" Margin="5,5,5,5">
                      Disable Junction Derail
                    </CheckBox>
                    <CheckBox Grid.Column="1" Grid.Row="0" IsChecked="{Binding SettingsGamePlay.QuickWalk}" Grid.ColumnSpan="2" Margin="5,5,5,5">Run</CheckBox>
                    <CheckBox Grid.Column="3" Grid.Row="0" IsChecked="{Binding SettingsGamePlay.ForceFeedback}" Margin="5,5,5,5" Grid.ColumnSpan="2">Force feedback</CheckBox>
                    <CheckBox Grid.Column="0" Grid.Row="1" IsChecked="{Binding SettingsGamePlay.CabSway}" Margin="5,5,5,5">Cab sway</CheckBox>
                    <Slider Name="CabSwayLevelSlider" Grid.Column="1" Grid.Row="1" Minimum="50" Maximum="200" IsSnapToTickEnabled="False" TickFrequency="10" Value="{Binding SettingsGamePlay.CabSwayLevelPercentage ,Mode=TwoWay}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="160" />
                    <TextBox Grid.Column="3" Grid.Row="1" Text="{Binding Value, ElementName=CabSwayLevelSlider, StringFormat={}{0:0}}" VerticalAlignment="Center" HorizontalContentAlignment="Right" />
                    <TextBlock Grid.Column="0" Grid.Row="2" Style="{StaticResource TextBlockDefault}" Margin="5,0,5,0">Measurements</TextBlock>
                    <ComboBox Grid.Column="1" Grid.Row="2" ItemsSource="{Binding Source={StaticResource UnitsEnum}}" SelectedValue="{Binding SettingsGamePlay.Units}" Grid.ColumnSpan="2" Margin="5,5,5,5" />

                    <TextBlock Grid.Column="0" Grid.Row="3" Style="{StaticResource TextBlockDefault}" Margin="5,0,5,0">Grade units</TextBlock>
                    <ComboBox Grid.Column="1" Grid.Row="3" ItemsSource="{Binding Source={StaticResource GradeUnitsEnum}}" SelectedValue="{Binding SettingsGamePlay.GradeUnits}" Grid.ColumnSpan="2" Margin="5,5,5,5" />

                    <TextBlock Grid.Column="0" Grid.Row="4" Style="{StaticResource TextBlockDefault}" Margin="5,0,5,0">Temperature units</TextBlock>
                    <ComboBox Grid.Column="1" Grid.Row="4" ItemsSource="{Binding Source={StaticResource TemperatureEnum}}" SelectedValue="{Binding SettingsGamePlay.TemperatureUnits}" Grid.ColumnSpan="2" Margin="5,5,5,5" />

                  </Grid>
                </StackPanel>
              </Border>
            </TabItem>

            <TabItem Header="User">
              <Border Style="{StaticResource BorderThin}" VerticalAlignment="Stretch">
                <StackPanel>
                  <CheckBox Name="AutoLoadJourneysCheckbox" 
                            IsChecked="{Binding SettingsUser.AutoLoadJourneys}">Autoload Journeys</CheckBox>
                  <CheckBox Name="ImmersiveCheckbox" IsChecked="{Binding SettingsUser.Immersive}">Controller uses Immersive mode</CheckBox>
                  <CheckBox Name="HideUIforSceeenshotsCheckbox" IsChecked="{Binding SettingsUser.HideUIForScreenshots }">Hide UI in DTG screenshots</CheckBox>
                  <CheckBox IsChecked="{Binding SettingsUser.BigSpeedoMeter}">Big speedometer</CheckBox>
                  <TextBlock Style="{StaticResource TextBlockDefault}" Margin="5 20 5 5">Crosshair settings</TextBlock>
                  <WrapPanel>
                    <StackPanel Width="150">
                      <RadioButton IsChecked="{Binding SettingsUser.CrosshairVisibility, Mode=TwoWay, 
                        Converter={StaticResource EnumToBooleanConverter
                        }, 
                        ConverterParameter={x:Static local:CrosshairVisibilityEnum.Off}}" 
                                   Margin="{StaticResource MarginDefault}">
                        Off
                      </RadioButton>
                      <RadioButton IsChecked="{Binding SettingsUser.CrosshairVisibility, Mode=TwoWay, 
                              Converter={StaticResource EnumToBooleanConverter}, 
                              ConverterParameter={x:Static local:CrosshairVisibilityEnum.Fifty}}" 
                                   Margin="{StaticResource MarginDefault}">
                        50%
                      </RadioButton>
                      <RadioButton IsChecked="{Binding SettingsUser.CrosshairVisibility, Mode=TwoWay, 
                               Converter={StaticResource EnumToBooleanConverter}, 
                               ConverterParameter={x:Static local:CrosshairVisibilityEnum.Hundred}}"
                                   Margin="{StaticResource MarginDefault}">
                        100%
                      </RadioButton>
                      <RadioButton IsChecked="{Binding SettingsUser.CrosshairVisibility, Mode=TwoWay, 
                               Converter={StaticResource EnumToBooleanConverter}, 
                               ConverterParameter={x:Static local:CrosshairVisibilityEnum.Large}}" 
                                   Margin="{StaticResource MarginDefault}">
                        Large
                      </RadioButton>
                    </StackPanel>
                    <CheckBox Width="150" VerticalAlignment="Top" IsChecked="{Binding SettingsUser.AutoHideCrosshair}">Auto hide crosshair</CheckBox>
                  </WrapPanel>
                </StackPanel>
              </Border>
            </TabItem>
            <TabItem Header="Advanced">
              <Border Style="{StaticResource ThinBorder}" VerticalAlignment="Stretch">
                <StackPanel>
                  <WrapPanel>
                    <CheckBox Name="EyeAdaptationCheckBox">Eye adaptation</CheckBox>
                    <CheckBox Name="MaterialQualityLowCheckBox">Low material quality</CheckBox>
                  </WrapPanel>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="115" />
                      <ColumnDefinition />
                      <ColumnDefinition Width="40" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                      <RowDefinition Height="{StaticResource GridHeight}" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Column="0" Grid.Row="0" Style="{StaticResource TextBlockDefault}">Screen percentage</TextBlock>
                    <Slider Name="ScreenPercentageSlider" Grid.Column="1" Grid.Row="0" Minimum="50" Maximum="200" IsSelectionRangeEnabled="True" SelectionStart="80" SelectionEnd="120" IsSnapToTickEnabled="True" TickFrequency="5" Value="{Binding SettingsAdvanced.ScreenPercentage ,Mode=TwoWay}" />
                    <TextBox Grid.Column="2" Grid.Row="0" Text="{Binding Value, ElementName=ScreenPercentageSlider, StringFormat={}{0:0}}" VerticalAlignment="Center" HorizontalContentAlignment="Right" />

                    <TextBlock Grid.Column="0" Grid.Row="1" Style="{StaticResource TextBlockDefault}">View distance scale</TextBlock>
                    <Slider Name="ViewDistanceScaleSlider" Grid.Column="1" Grid.Row="1" Minimum="1" Maximum="30" IsSelectionRangeEnabled="True" SelectionStart="1" SelectionEnd="5" IsSnapToTickEnabled="True" TickFrequency="1" Value="{Binding SettingsAdvanced.ViewDistanceScale  ,Mode=TwoWay}" />
                    <TextBox Grid.Column="2" Grid.Row="1" Text="{Binding Value, ElementName=ViewDistanceScaleSlider, StringFormat={}{0:0}}" VerticalAlignment="Center" HorizontalContentAlignment="Right" />

                    <TextBlock Grid.Column="0" Grid.Row="2" Style="{StaticResource TextBlockDefault}">Motion blur</TextBlock>
                    <Slider Name="MotionBlurSlider" Grid.Column="1" Grid.Row="2" Minimum="0" Maximum="4" IsSelectionRangeEnabled="True" SelectionStart="0" SelectionEnd="1" IsSnapToTickEnabled="True" TickFrequency="1" Value="{Binding SettingsAdvanced.MotionBlurQuality ,Mode=TwoWay}" />
                    <TextBox Grid.Column="2" Grid.Row="2" Text="{Binding Value, ElementName=MotionBlurSlider, StringFormat={}{0:0}}" VerticalAlignment="Center" HorizontalContentAlignment="Right" />

                    <TextBlock Grid.Column="0" Grid.Row="3" Style="{StaticResource TextBlockDefault}">Foliage distance</TextBlock>
                    <Slider Name="LODDistanceSlider" Grid.Column="1" Grid.Row="3" Minimum="0" Maximum="10" IsSelectionRangeEnabled="True" SelectionStart="1" SelectionEnd="3" IsSnapToTickEnabled="True" TickFrequency="1" Value="{Binding SettingsAdvanced.LODDistanceScale ,Mode=TwoWay}" />
                    <TextBox Grid.Column="2" Grid.Row="3" Text="{Binding Value, ElementName=LODDistanceSlider, StringFormat={}{0:0}}" VerticalAlignment="Center" HorizontalContentAlignment="Right" />

                    <TextBlock Grid.Column="0" Grid.Row="4" Style="{StaticResource TextBlockDefault}">Gamma correction</TextBlock>
                    <Slider Name="GammaCorrectionSlider" Grid.Column="1" Grid.Row="4" Minimum="0.2" Maximum="0.8" SmallChange="0.05" LargeChange="0.05" IsSelectionRangeEnabled="False" TickPlacement="BottomRight" TickFrequency="0.05" Value="{Binding SettingsAdvanced.GammaCorrection ,Mode=TwoWay}" />
                    <TextBox Grid.Column="2" Grid.Row="4" Text="{Binding Value, ElementName=GammaCorrectionSlider, StringFormat='{}{0:0.00}'}" VerticalAlignment="Center" HorizontalContentAlignment="Right" />
                  </Grid>
                  <WrapPanel>
                    <Button Name="SetRecommendedAdvancedButton" Style="{StaticResource WideButton}" Click="OnSetRecommendedAdvancedButtonClicked">
                      Set recommended
                    </Button>
                    <CheckBox Name="UseAdvancedSettingsCheckBox" IsChecked="{Binding UseAdvanced, Mode=TwoWay}" Checked="UseAdvancedSettingsCheckBoxChanged" Unchecked="UseAdvancedSettingsCheckBoxChanged">
                      Use advanced settings
                    </CheckBox>
                  </WrapPanel>
                </StackPanel>
              </Border>
            </TabItem>
            <TabItem Header="Experimental">
              <Border Style="{StaticResource ThinBorder}" VerticalAlignment="Stretch">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <StackPanel Grid.Column="0">


                    <TextBlock Style="{StaticResource TextBlockHeader}">
							Worksets
                    </TextBlock>
                    <DataGrid Name="WorkSetsDatagrid" ItemsSource="{Binding SettingsExperimental.EngineIniWorkSetList}" SelectedItem="{Binding SettingsExperimental.SelectedWorkSet}" Style="{StaticResource DataGridReadOnly}" Height="200" SelectionChanged="WorkSetsDatagrid_SelectionChanged">
                      <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Width="160" Binding="{Binding WorkSetName}" />
                      </DataGrid.Columns>
                    </DataGrid>
                    <Button Name="EditWorkSets" Style="{StaticResource ButtonDefault}" Click="EditWorkSets_Click">Edit Workset</Button>

                  </StackPanel>
                  <StackPanel Grid.Column="1" VerticalAlignment="Center">
                    <Button Name="AddWorkSet" Style="{StaticResource ButtonImage}" Click="AddWorkSet_Click">
                      <Image Source="../Images/RightArrow.ico" />
                    </Button>
                    <Button Name="RemoveWorkSet" Style="{StaticResource ButtonImage}" Click="RemoveWorkSet_Click">
                      <Image Source="../Images/LeftArrow.ico" />
                    </Button>
                  </StackPanel>
                  <StackPanel Grid.Column="2">
                    <TextBlock Style="{StaticResource TextBlockHeader}">
							Selected Settings
                    </TextBlock>
                    <DataGrid Name="ValuesDatagrid" ItemsSource="{Binding SettingsExperimental.ValueList}" SelectedItem="{Binding SettingsExperimental.SelectedValue}" Style="{StaticResource DataGridDefault}" Height="300" CanUserAddRows="False" CanUserDeleteRows="False" SelectionChanged="ValuesDatagrid_SelectionChanged" AutoGenerateColumns="False">
                      <DataGrid.Columns>
                        <DataGridTextColumn Header="Ws" Width="80" Binding="{Binding WorkSetName}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Setting" Width="200" Binding="{Binding SettingName}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Value" Width="50" Binding="{Binding SettingValue}" />
                      </DataGrid.Columns>
                    </DataGrid>
                    <TextBox Text="{Binding SettingsExperimental.SelectedValue.SettingDescription, Mode=TwoWay}" Style="{StaticResource TextBoxMultiLine}" Height="150" Width="330" IsReadOnly="True" />
                  </StackPanel>
                </Grid>


              </Border>
            </TabItem>
          </TabControl>
        </StackPanel>
      </Border>

      <Border Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" Style="{StaticResource DefaultBorder}">
        <StackPanel>
          <WrapPanel>
            <Button Name="LoadActiveGameSettings" Style="{StaticResource WideButton}" Click="OnLoadActiveGameSettingsClicked">
              Load active settings
            </Button>
            <Button Name="LoadSaveSetSettingsButton" Style="{StaticResource WideButton}" Click="OnLoadSaveSetSettingsButtonClicked">
              Load save set
            </Button>
            <Button Name="SaveSettings" Style="{StaticResource WideButton}" Click="OnSaveSettingsClicked">
              Save in game
            </Button>
          </WrapPanel>
          <WrapPanel>
            <TextBlock Style="{StaticResource TextBlockDefault}">Save set name</TextBlock>
            <TextBox Name="SaveSetNameTextBox" MinWidth="160" Text="{Binding SaveSetName}" TextChanged="OnSaveSetNameTextBoxTextChanged" />
            <Button Name="UpdateSaveSetButton" Style="{StaticResource WideButton}" Click="OnUpdateSaveSetButtonClicked">Save as SaveSet</Button>
          </WrapPanel>
        </StackPanel>
      </Border>

      <Border Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="3" Style="{StaticResource DefaultBorder}">
        <DockPanel>
          <userControls:ResultsTextBox x:Name="ResultsTextBox" Width="700" Style="{StaticResource DefaultResultsTextBox}" Text="{Binding Result}" Source="../Images/page_delete.png" />
          <Button Name="OKButton" Style="{StaticResource OKButton}" DockPanel.Dock="Right" VerticalAlignment="Bottom" Click="OnOKButtonClicked">
            Close
          </Button>

        </DockPanel>
      </Border>
    </Grid>
  </ScrollViewer>
</Window>